<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8">
    <title>여러 개 마커에 클릭 이벤트 등록</title>
    
</head>
<body>
<div id="map" style="width:100%;height:350px;"></div>

<script type="text/javascript" src="//dapi.kakao.com/v2/maps/sdk.js?appkey="></script>
<script>
var mapContainer = document.getElementById('map'), // 지도를 표시할 div 
    mapOption = { 
        center: new kakao.maps.LatLng(33.450701, 126.570667), // 지도의 중심좌표
        level: 3 // 지도의 확대 레벨
    };

var map = new kakao.maps.Map(mapContainer, mapOption); // 지도를 생성합니다

// 가맹점 정보와 위치 넣는 방법 (1)
// -> 엑셀 파일의 가맹점 위치(경도 및 위도)를 불러와야 합니다.
// 마커를 표시할 위치와 title 객체 배열입니다 
var positions = [
    {
        title: 'A', 
        latlng: new kakao.maps.LatLng(33.450705, 126.570677)
    },
    {
        title: 'B', 
        latlng: new kakao.maps.LatLng(33.450936, 126.569477)
    },
    {
        title: 'C', 
        latlng: new kakao.maps.LatLng(33.450879, 126.569940)
    },
];

// 마커를 생성합니다
var marker = new kakao.maps.Marker({
  position: position,
  clickable: true // 마커를 클릭했을 때 지도의 클릭 이벤트가 발생하지 않도록 설정합니다
});

// 아래 코드는 위의 마커를 생성하는 코드에서 clickable: true 와 같이
// 마커를 클릭했을 때 지도의 클릭 이벤트가 발생하지 않도록 설정합니다
// marker.setClickable(true);

// 마커를 지도에 표시합니다.
marker.setMap(map);

// 마커를 클릭했을 때 마커 위에 표시할 인포윈도우를 생성합니다
var iwContent = '<div style="padding:5px;">Hello World!</div>', // 인포윈도우에 표출될 내용으로 HTML 문자열이나 document element가 가능합니다
    iwRemoveable = true; // removeable 속성을 ture 로 설정하면 인포윈도우를 닫을 수 있는 x버튼이 표시됩니다

// 인포윈도우를 생성합니다
var infowindow = new kakao.maps.InfoWindow({
    content : iwContent,
    removable : iwRemoveable
});

// 마커에 클릭이벤트를 등록합니다
kakao.maps.event.addListener(marker, 'click', function() {
      // 마커 위에 인포윈도우를 표시합니다
      infowindow.open(map, marker);  
});

// 가맹점 정보와 위치 넣는 방법 (2)
// 주소-좌표 변환 객체를 생성합니다
var geocoder = new daum.maps.services.Geocoder();
var myAddress = [        ];
// 위 리스트 내부에 엑셀 파일의 가맹점 주소를 문자열 나열로 불러와야 합니다.

function myMarker(number, address) {
// 주소로 좌표를 검색합니다
    geocoder
        .addressSearch(address, function(result, status) {
            // 정상적으로 검색이 완료됐으면 
            if (status === daum.maps.services.Status.OK) {
 
                var coords = new daum.maps.LatLng(
                    result[0].y, result[0].x);
 
                // 결과값으로 받은 위치를 마커로 표시합니다
                var marker = new daum.maps.Marker({
                    map : map,
                    position : coords
                });
                                     
 
                // 인포윈도우로 장소에 대한 설명을 표시합니다
                var infowindow = new daum.maps.InfoWindow(
                        {
                            // content : '<div style="width:50px;text-align:center;padding:3px 0;">I</div>'
                            content : '<div style="color:red;">' +  number + '</div>'
                        });
                infowindow.open(map, marker);
                                    
 
                // 커스텀 오버레이에 표출될 내용으로 HTML 문자열이나 document element가 가능합니다
                var content = '<div class="customoverlay">'
                        + '    <span class="title">'
                        + '<div style="font-style:normal; color:red; font-weight:bold; font-size:2.0em">'
                        + number + '</div>' + '</span>'
                        + '</div>';
 
                // 커스텀 오버레이가 표시될 위치입니다 
                var position = new daum.maps.LatLng(
                        result[0].y, result[0].x);
 
                // 커스텀 오버레이를 생성합니다
                var customOverlay = new daum.maps.CustomOverlay(
                        {
                            map : map,
                            position : position,
                            content : content,
                            yAnchor : 1
                        });
                // 지도의 중심을 결과값으로 받은 위치로 이동시킵니다
                map.setCenter(coords);
            }
        });
}

for (i = 0; i < myAddress.length; i++) {
    myMarker(i + 1, myAddress[i]);
}
</script>
</body>
</html>
